openapi: 3.0.0
paths:
  /user:
    post:
      operationId: create
      summary: Create user
      description: Creates a new user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "201":
          description: The user has been created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request. body does not contain required fields
      tags: &a1
        - User
    get:
      operationId: findAll
      summary: Get all users
      description: Gets all users
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
      tags: *a1
  "/user/{id}":
    get:
      operationId: findOne
      summary: Get single user by id
      description: Get single user by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request. userId is invalid (not uuid)
        "404":
          description: User not found
      tags: *a1
    put:
      operationId: update
      summary: Update a user's password
      description: Updates a user's password by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request. userId is invalid (not uuid)
        "403":
          description: oldPassword is wrong
        "404":
          description: User not found
      tags: *a1
    delete:
      operationId: remove
      summary: Delete user
      description: Deletes user by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: The user has been deleted
        "400":
          description: Bad request. userId is invalid (not uuid)
        "404":
          description: User not found
      tags: *a1
  /track:
    post:
      operationId: create
      summary: Add new track
      description: Add new track information
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Track"
        "400":
          description: Bad request. body does not contain required fields
      tags: &a2
        - Track
    get:
      operationId: findAll
      summary: Get tracks list
      description: Gets all library tracks list
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Track"
      tags: *a2
  "/track/{id}":
    get:
      operationId: findOne
      summary: Get single track by id
      description: Gets single track by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Track"
        "400":
          description: Bad request. trackId is invalid (not uuid)
        "404":
          description: Track was not found
      tags: *a2
    put:
      operationId: update
      summary: Update track information
      description: Update library track information by UUID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Track"
        "400":
          description: Bad request. trackId is invalid (not uuid)
        "404":
          description: Track was not found
      tags: *a2
    delete:
      operationId: remove
      summary: Delete track
      description: Delete track from library
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: Deleted successfully
        "400":
          description: Bad request. trackId is invalid (not uuid)
        "404":
          description: Track was not found
      tags: *a2
  /favs:
    get:
      operationId: findAll
      summary: Get all favorites
      description: Gets all favorites movies, tracks and books
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Favorites"
      tags: &a3
        - Favs
  "/favs/track/{id}":
    post:
      operationId: createTrackFav
      summary: Add track to the favorites
      description: Add track to the favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: Added successfully
        "400":
          description: Bad. trackId is invalid (not uuid)
        "422":
          description: Track with id doesn't exist
      tags: *a3
    delete:
      operationId: removeTrackFav
      summary: Delete track from favorites
      description: Delete track from favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: Deleted successfully
        "400":
          description: Bad. trackId is invalid (not uuid)
        "404":
          description: Track was not found
      tags: *a3
  "/favs/album/{id}":
    post:
      operationId: createAlbumFav
      summary: Add album to the favorites
      description: Add album to the favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: Added successfully
        "400":
          description: Bad. albumId is invalid (not uuid)
        "422":
          description: Album with id doesn't exist
      tags: *a3
    delete:
      operationId: removeAlbumFav
      summary: Delete album from favorites
      description: Delete album from favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: Deleted successfully
        "400":
          description: Bad. albumId is invalid (not uuid)
        "404":
          description: Album was not found
      tags: *a3
  "/favs/artist/{id}":
    post:
      operationId: createArtistFav
      summary: Add artist to the favorites
      description: Add artist to the favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: Added successfully
        "400":
          description: Bad request. artistId is invalid (not uuid)
        "422":
          description: Artist with id doesn't exist
      tags: *a3
    delete:
      operationId: removeArtistFav
      summary: Delete artist from favorites
      description: Delete artist from favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: Deleted successfully
        "400":
          description: Bad request. artistId is invalid (not uuid)
        "404":
          description: Artist was not found
      tags: *a3
  /artist:
    post:
      operationId: create
      summary: Add new artist
      description: Add new artist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        "400":
          description: Bad request. body does not contain required fields
      tags: &a4
        - Artist
    get:
      operationId: findAll
      summary: Get all artists
      description: Gets all artists
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Artist"
      tags: *a4
  "/artist/{id}":
    get:
      operationId: findOne
      summary: Get single artist by id
      description: Get single artist by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        "400":
          description: Bad request. artistId is invalid (not uuid)
        "404":
          description: Artist was not found
      tags: *a4
    put:
      operationId: update
      summary: Update artist information
      description: Update artist information by UUID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        "400":
          description: Bad request. artistId is invalid (not uuid)
        "404":
          description: Artist was not found
      tags: *a4
    delete:
      operationId: remove
      summary: Delete artist
      description: Delete artist from library
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
        "400":
          description: Bad request. artistId is invalid (not uuid)
        "404":
          description: Artist was not found
      tags: *a4
  /album:
    post:
      operationId: create
      summary: Add new album
      description: Add new album information
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        "201":
          description: Album is created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        "400":
          description: Bad request. body does not contain required fields
      tags: &a5
        - Album
    get:
      operationId: findAll
      summary: Get albums list
      description: Gets all library albums list
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Album"
      tags: *a5
  "/album/{id}":
    get:
      operationId: findOne
      summary: Get single album by id
      description: Gets single album by id
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        "400":
          description: Bad request. albumId is invalid (not uuid)
        "404":
          description: Album was not found
      tags: *a5
    put:
      operationId: update
      summary: Update album information
      description: Update library album information by UUID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        "400":
          description: Bad request. albumId is invalid (not uuid)
        "404":
          description: Album was not found
      tags: *a5
    delete:
      operationId: remove
      summary: Delete album
      description: Delete album from library
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: Deleted successfully
        "400":
          description: Bad request. albumId is invalid (not uuid)
        "404":
          description: Album was not found
      tags: *a5
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0
  contact: {}
tags: []
servers:
  - url: /api
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid v4
        login:
          type: string
        version:
          type: number
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          nullable: true
        albumId:
          type: string
          nullable: true
        duration:
          type: number
      required:
        - name
        - duration
    Track:
      type: object
      properties:
        id:
          type: string
          format: uuid v4
        artistId:
          type: string
          nullable: true
          format: uuid v4
        albumId:
          type: string
          nullable: true
          format: uuid v4
        name:
          type: string
        duration:
          type: number
      required:
        - id
        - name
        - duration
    Artist:
      type: object
      properties:
        id:
          type: string
          format: uuid v4
        name:
          type: string
        grammy:
          type: boolean
      required:
        - id
        - name
        - grammy
    Album:
      type: object
      properties:
        id:
          type: string
          format: uuid v4
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
      required:
        - id
        - name
        - year
    Favorites:
      type: object
      properties:
        artists:
          type: array
          items:
            $ref: "#/components/schemas/Artist"
        albums:
          type: array
          items:
            $ref: "#/components/schemas/Album"
        tracks:
          type: array
          items:
            $ref: "#/components/schemas/Track"
      required:
        - artists
        - albums
        - tracks
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          nullable: true
      required:
        - name
        - year
